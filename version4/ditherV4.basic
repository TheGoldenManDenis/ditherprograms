fin%=OPENIN("in.bmp")
fout%=OPENOUT("out.bmp")

REM ############### prepare array for FNexperiment

DIM tri%(1024)
j%=0
garbage%=3

FOR i%=-garbage% TO garbage% STEP 2
 tri%(j%)=i%: j%+=1
NEXT: j%=garbage%
FOR i%=garbage%-1 TO -garbage% STEP -2
 tri%(j%)=i%: j%+=1
NEXT

REM ###############

REM where to find the pixel array
PTR#fin%=10
location%=BGET#fin%
location%+=BGET#fin%*256
location%+=BGET#fin%*256*256
location%+=BGET#fin%*256*256*256
REM load width information from header
PTR#fin%=18
width%=BGET#fin%
width%+=BGET#fin%*256
width%+=BGET#fin%*256*256
width%+=BGET#fin%*256*256*256

IF width%MOD4>0 THEN DRAW 1,1: CLS: PRINT "Width must be multiple of 4": WAIT (50): END

PTR#fin%=0: PTR#fout%=0
REPEAT
 BPUT#fout%,BGET#fin%
UNTIL PTR#fin%=location%

x%=0: y%=0: ycounter%=0

REPEAT

 pixel%=FNgetpixel

 IF 148+ FNexperiment(       (x%*4)+(640*y%*4)     )*100  >=pixel% THEN
  writepixel%=0
 ELSE
  writepixel%=255
 ENDIF

 PROCwritepixel(writepixel%)
 

UNTIL EOF#fin%

CLOSE#fin%: CLOSE#fout%

END

DEFFNgetpixel
 LOCAL in%,null%

 x%+=1
 ycounter%+=1
 IF ycounter%>=width% THEN ycounter%=0: y%+=1: x%=0
 
 in%=BGET#fin%: in%+=BGET#fin%: in%+=BGET#fin%:

=in%DIV3

DEFPROCwritepixel(in%)

 BPUT#fout%,in%
 BPUT#fout%,in%
 BPUT#fout%,in%

ENDPROC

DEFFNexperiment(in)
 LOCAL remain,result,in%,trueresult
 
 in=ABS(in)
 in=in*0.9557

 in%=in*125
 inb%=INT(in)*125

 IF (in MOD(garbage%*2))<garbage% THEN 
  remain=(in%-inb%)/500
 ELSE
  remain=((in%-inb%)/500)*-1
 ENDIF

 result=tri%(INT(in) MOD (garbage%*2))/(garbage%*2)

 trueresult=((result+remain)*2.02)+0.15

=trueresult
